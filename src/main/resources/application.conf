akka {
  loglevel = "DEBUG"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  http {
    server {
      idle-timeout = 120 s
      request-timeout = 119 s
    }
    parsing {
      max-content-length = 200m
      max-to-strict-bytes = 100m
    }
  }

  ai-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher
    # What kind of ExecutionService to use
    executor = "thread-pool-executor"
    thread-pool-executor {
        # minimum number of threads to cap factor-based core number to
        core-pool-size-min = 8
        # No of core threads ... ceil(available processors * factor)
        core-pool-size-factor = 2.0
        # maximum number of threads to cap factor-based number to
        core-pool-size-max = 64
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 1
  }

}


service {
  http {
    interface = "0.0.0.0"
    port = 9090
  }

  grpc {
    port = 9091
  }

  home = "/opt/ai-serving"
}

onnxruntime {
  backend = "cpu"
  device-id = 0
  execution-mode = "sequential" // one of "sequential", "parallel"
  optimization-level = "all"    // one of "no", "basic", "extended", "all"
}

